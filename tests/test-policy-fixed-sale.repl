(env-data {"disable-marmalade":true})
(load "kadena_repl_sandbox/kda-env/init.repl")
(load "init/init-ledger.repl")
(load "init/init-policy-fixed-sale.repl")

(begin-tx)
(load "tools/events_analyzer.pact")
(commit-tx)

(begin-tx "Create a token")
(env-hash (hash "CreateTx"))
(use marmalade-ng.ledger)
(env-data {'create-ks:["create"]})

(env-sigs [{'key:"create", 'caps:[(ENFORCE-RESERVED)]}])
(create-token "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" 1 "http://token-1"
              [marmalade-ng.policy-fixed-sale] (read-keyset 'create-ks))

(env-data {'alice-ks:["alice-key"]})

(mint "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" (read-keyset 'alice-ks) 0.6)

(commit-tx)

(begin-tx "Sales")
(env-hash (hash "fixed-sale-1"))
(print (format "Sale ID 1: => {}" [(tx-hash)]))

; Alice will sell 0.1 to carol
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)

(env-sigs [ {'key:"alice-key", 'caps:[(OFFER "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1)]}
           ])

(env-chain-data {"block-time": (time "2023-01-01T00:00:00Z")})
(expect "Balance of was 0.6" 0.6 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))


; try without env-data
(expect-failure "No env-data provided" "No policy to handle the offer"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Try with invalid fields
(env-data {'marmalade_sale:{'sale_type:"poo", 'currency:coin }})

(expect-failure "Bad sale type" "No policy to handle the offer"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Try with a valid marmalade_sale but with a mssing fixed quote msg
(env-data {'marmalade_sale:{'sale_type:"fixed", 'currency:coin }})
(expect-failure "fixed_quote not present in data" "fixed_quote not present in data"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Try with a missing recipient
(env-data {'marmalade_sale: {'sale_type:"fixed", 'currency:coin },
           'marmalade_fixed_quote: {'recipient:"", 'price:10.0 }})

(expect-failure "bad recipient" "Account name does not conform"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Try with a bad price
(env-data {'marmalade_sale: {'sale_type:"fixed", 'currency:coin },
           'marmalade_fixed_quote: {'recipient:"alice", 'price:-3.0 }})

(expect-failure "bad price" "Price out of range"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Try with an unknown account
(env-data {'marmalade_sale: {'sale_type:"fixed", 'currency:coin },
           'marmalade_fixed_quote: {'recipient:"unknwon", 'price:5.0 }})

(expect-failure "unknown KDA account" "does not exist"
  (sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z")))

; Now try exrything good
(env-data {'marmalade_sale: {'sale_type:"fixed", 'currency:coin },
           'marmalade_fixed_quote: {'recipient:"alice", 'price:5.0 }})

(env-events true)
(sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.1 (time "2023-06-01T00:00:00Z"))

(ev-analyzer.store (env-events true))
(expect "Event FIXED-SALE-OFFER has been emitted" true (ev-analyzer.is-present "FIXED-SALE-OFFER"))
(expect "Event FIXED-SALE-OFFER -> sale_id" (hash "fixed-sale-1") (ev-analyzer.param "FIXED-SALE-OFFER" 0))
(expect "Event FIXED-SALE-OFFER -> token_id" "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" (ev-analyzer.param "FIXED-SALE-OFFER" 1))
(expect "Event FIXED-SALE-OFFER -> price" 5.0 (ev-analyzer.param "FIXED-SALE-OFFER" 2))
(expect "Event FIXED-SALE-OFFER -> curency" "coin" (ev-analyzer.param "FIXED-SALE-OFFER" 3))

(expect-that "It should exist 1 active sale" (compose (length) (= 1)) (get-all-active-sales))
(expect-that "It should exist 1 active sale" (compose (length) (= 1)) (get-sales-for-token "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM"))
(expect-that "It should exist 1 active sale from alice" (compose (length) (= 1)) (get-sales-from-account "alice"))
(expect-that "It should exist 0 active sale from bob" (compose (length) (= 0)) (get-sales-from-account "bob"))



(print (+ "Escrow account: => " (at 'escrow-account (get-sale (tx-hash)))))


(commit-tx)


;; We will try to withdraw
(begin-tx "Sales withdraw")
(env-hash (hash "fixed-sale-1-withdraw"))
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)

; Try before the ending date
(env-chain-data {"block-time": (time "2023-05-30T00:00:00Z")})
(expect-failure "Before ending date" "Sale not ended"
  (continue-pact 0 true (hash  "fixed-sale-1")))

; After end date
(env-chain-data {"block-time": (time "2023-06-02T00:00:00Z")})

(env-events true)
(continue-pact 0 true (hash "fixed-sale-1"))

(ev-analyzer.store (env-events true))
(expect "Event FIXED-SALE-WITHDRAWN has been emitted" true (ev-analyzer.is-present "FIXED-SALE-WITHDRAWN"))
(expect "Event FIXED-SALE-WITHDRAWN -> sale_id" (hash "fixed-sale-1") (ev-analyzer.param "FIXED-SALE-WITHDRAWN" 0))
(expect "Event FIXED-SALE-WITHDRAWN -> token_id" "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" (ev-analyzer.param "FIXED-SALE-WITHDRAWN" 1))

(expect-that "It should exist 0 active sale" (compose (length) (= 0)) (get-all-active-sales))

; Check that the balance of Alice has recovered
(expect "Balance of alice is now back 0.6" 0.6 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))


; Rollback
(rollback-tx)

; Bob will try to buy
(begin-tx "Sales buy")
(env-hash (hash "fixed-sale-1-buy"))
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)

; First confirm the balances of their respective KDA accounts
(expect "Initial balance should be 1000" 1000.0 (coin.get-balance "alice"))
(expect "Initial balance should be 1000" 1000.0 (coin.get-balance "bob"))

(env-data {'buyer:"bob", 'buyer-guard:{'pred:"keys-all", 'keys:["bob-key"]}})

; After end date
(env-chain-data {"block-time": (time "2023-06-02T00:00:00Z")})
(expect-failure "Before ending date" "Sale ended"
  (continue-pact 1 false (hash  "fixed-sale-1")))

; Now it shoudl work
(env-sigs [{'key:"bob-key", 'caps:[(coin.TRANSFER "bob" "c:uZK0n0opPMtEMAOctKX2S-nNa3KCotC9TBQCnXPOYeY" 5.0)]}])
(env-chain-data {"block-time": (time "2023-05-01T00:00:00Z")})

(env-events true)
(continue-pact 1 false (hash  "fixed-sale-1"))

(ev-analyzer.store (env-events true))
(expect "Event FIXED-SALE-BOUGHT has been emitted" true (ev-analyzer.is-present "FIXED-SALE-BOUGHT"))
(expect "Event FIXED-SALE-BOUGHT -> sale_id" (hash "fixed-sale-1") (ev-analyzer.param "FIXED-SALE-BOUGHT" 0))
(expect "Event FIXED-SALE-BOUGHT -> token_id" "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" (ev-analyzer.param "FIXED-SALE-BOUGHT" 1))
(expect "Event FIXED-SALE-BOUGHT -> price" 5.0 (ev-analyzer.param "FIXED-SALE-BOUGHT" 2))
(expect "Event FIXED-SALE-BOUGHT -> curency" "coin" (ev-analyzer.param "FIXED-SALE-BOUGHT" 3))


; Check the KDA balances
(expect "Final balance should be 1005" 1005.0 (coin.get-balance "alice"))
(expect "Final balance should be 995" 995.0 (coin.get-balance "bob"))

; Checl the token balances
(expect "Balance of alice is now  0.5" 0.5 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))
(expect "Balance of alice is now  0.1" 0.1 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "bob"))

(expect-that "It should exist 0 active sale" (compose (length) (= 0)) (get-all-active-sales))
(expect-that "It should exist 0 active sale" (compose (length) (= 0)) (get-sales-for-token "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM"))
(expect-that "It should exist 0 active sale from alice" (compose (length) (= 0)) (get-sales-from-account "alice"))

(commit-tx)


;------------------------ Try with an infinite Timeout ----------------------
(begin-tx "Sales 2")
(env-hash (hash "fixed-sale-2"))
(print (format "Sale ID 2: => {}" [(tx-hash)]))
; Alice will sell 0.2 to carol
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)

(env-sigs [ {'key:"alice-key", 'caps:[(OFFER "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.2)]}
           ])

(env-chain-data {"block-time": (time "2023-01-01T00:00:00Z")})

(env-data {'marmalade_sale: {'sale_type:"fixed", 'currency:coin },
           'marmalade_fixed_quote: {'recipient:"alice", 'price:5.0 }})

(sale "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice" 0.2 NO-TIMEOUT)

(print (+ "Escrow account: => " (at 'escrow-account (get-sale (tx-hash)))))

(expect "Balance of alice is 0.3" 0.3 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))
(commit-tx)

(begin-tx "Force withdraw Sale 2")
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)
; try to withdraw only 1 hour later
(env-chain-data {"block-time": (time "2023-01-01T01:00:00Z")})
; try without proper signature
(expect-failure "Not signed" "Seller must sign forced-withdrawal"
  (continue-pact 0 true (hash "fixed-sale-2")))

(env-sigs [{'key:"alice-key", 'caps:[(FORCE-WITHDRAW (hash "fixed-sale-2"))]}
          ])
(continue-pact 0 true (hash "fixed-sale-2"))
(expect "Balance of alice is now back 0.5" 0.5 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))
(rollback-tx)


(begin-tx "Try to buy 2 years later")
(use marmalade-ng.ledger)
(use marmalade-ng.policy-fixed-sale)

(env-chain-data {"block-time": (time "2025-01-01T00:00:00Z")})
(env-data {'buyer:"bob", 'buyer-guard:{'pred:"keys-all", 'keys:["bob-key"]}})

(env-sigs [{'key:"bob-key", 'caps:[(coin.TRANSFER "bob" "c:RofYomFLW13xvivg2XjN3MykJG_1hNRfDvV4W2DjdNU" 5.0)]}])
(continue-pact 1 false (hash  "fixed-sale-2"))
(expect "Balance of alice is 0.3" 0.3 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "alice"))
(expect "Balance of bob is 0.3" 0.3 (get-balance "t:r-4jQUrZWpYfEqq_iGvBn1ofgCLPoh2ZfG5kfAVX2KM" "bob"))
(commit-tx)
